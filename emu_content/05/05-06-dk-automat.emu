|> section
    title_gr DK-Automat
    title_en dk automat
    number 5.6
    counter DefCtr
    counter ExoCtr
    |> div
        id link-to-toc
        |> a
            href ../vorlesungsskript.html

            Inhaltsverzeichnis
        |> a
            href 05-05-d-linker-Rand-und-Bluete.html

            &lt;&lt; Kapitel 5.5
    |> div
        id link-to-overview
        style text-align: end
        |> a
            href /

            zur Kursübersicht
        |> a
            href 05-09-general-parsing.html

            Kapitel 5.9 &gt;&gt;
    |> div
        id rightSideWrapper
        |> div
            class content
            |> div
                class chapter
                |> div
                    class subChapter
                    |> h1
                        class hidden-title
                        |> span
                            class subChapterTitle

                            ::::ChapterCtr.::++SectionCtr
                            Der DK-Automat
                    |> h2

                        Von der Grammatik \(\hat{G}\) zu einem nichtdeterministischen
                        endlichen Automaten
                    |> p

                        Um den \(LR(0)\)-Parser gemäß
                        |> a
                            href ./05-05-d-linker-Rand-und-Bluete.html#algorithm-LR-parser

                            Algorithmus 5.8.7
                        zu implementieren, müssen wir den Test \(\gamma \stackrel{?}\in
                        \Front(G)\) durchführen und, falls die Antwort _ja_ ist, die
                        Blüte finden. Dies gelingt uns, indem wir die Grammatik \(\hat{G}\) in
                        einen endlichen Automaten umwandeln.
                        |> a
                            href ./04-03-nfsm.html#regular-grammar-to-fsm

                            Theorem 4.3.8
                        und die ihm vorhergehende Konstruktion zeigen, wie man das macht.
                        Anstatt allerdings das Theorem als "black box" zu verwenden, gehen wir
                        die Konstruktion anhand zweier fiktiver Produktion $X \rightarrow
                        aBcDe$ und $X \rightarrow uVw$ Schritt für Schritt durch. Wir erkennen
                        die Terminale $\Sigma = \{a,c,e,u,w\}$ und die Nichtterminale $N =
                        \{X,B,D,V\}$. In $\dk{G}$ sind \{a,c,e,u,w,A,B,D,V\} alles Terminale,
                        und die Nichtterminale sind $\dk{N} = \{\dk{X}, \dk{B}, \dk{D},
                        \dk{V}\}.$ Die Produktionen von $\hat{G}$ sind \begin{align*} \dk{X}&
                        \rightarrow a\dk{B} \\ \dk{X}&amp;\rightarrow a\dkt{B}c\dk{D} \\ \dk{X}
                        &amp;\rightarrow a\dkt{B}c\dkt{D}e \\&amp;\\ \dk{X}&amp;\rightarrow u\dk{V}
                        \\ \dk{X}&amp;\rightarrow u\dkt{V}w \end{align*}
                    |> p

                        Diese übersetzen wir in einen verallgemeinert nichtdeterministischen
                        Automaten, bei dem jede Kante mit einem Wort $\beta \in (\Sigma \cup
                        N)^*$, also aus _Terminalen_der Grammatik $\dk{G}$ beschriftet ist:
                    |> figure
                        |> img
                            style height: 9em
                            src ../img/context-free/LR/hat-G-to-generalized-automaton.svg
                    |> p

                        Wir brechen die Kanten in Stücke, so dass jede mit genau einem Zeichen
                        beschriftet ist:
                    |> figure
                        |> img
                            style height: 11em
                            src ../img/context-free/LR/hat-G-to-generalized-automaton-break-edges.svg
                    |> p

                        Nochmal: jede Kante ist mit einem _Terminalsymbol_ beschriftet.
                        Die Symbole $B, D, V$ sind _Terminale_ in der Grammatik
                        $\dk{G}$. Wenn wir $\epsilon$-Übergänge zulassen, können wir den
                        Automaten übersichtlicher gestalten und mehrere Zustände
                        zusammenfassen:
                    |> figure
                        |> img
                            style height: 6em
                            src ../img/context-free/LR/hat-G-to-generalized-automaton-numbered-names.svg
                    |> p

                        Wir werden uns noch bessere Namen für die Zwischenzustände ausdenken.
                        Wenn wir uns an die Rechtsableitungsbäume mit Stamm, linkem Rand,
                        Blüte und rechtem Rest erinnern, dann haben die Zwischenzustände eine
                        klare Bedeutung: der Zustand $4$ oben zum Beispiel bedeutet, dass der
                        Knoten $X$ im Stamm mit $a, B, c, D, e$ beschriftete Kinder hat und
                        wir uns bereits entschieden haben, dass $a$, $B$ und $c$_Blätter_ sein sollen, also zum linken Rand gehören. Der
                        Übergang $\boxed{4} \step{D} \boxed{5}$ entspricht dann der
                        Entscheidung, auch $D$ zu einem Blatt zu machen, während $\boxed{4}
                        \step{\epsilon} \dk{D}$ der Entscheidung entspricht, $D$ zu einem
                        Knoten im Stamm zu machen und eine $D$-Produktion anzuwenden. Die
                        beiden $\epsilon$-Übergänge von $\dk{X}$ nach $\boxed{1}$ bzw.
                        $\boxed{7}$ stellen einfach sicher, dass wir uns erst entscheiden, mit
                        welcher Produktion wir den Stammknoten $X$ expandieren, bevor wir
                        weitermachen. Daher nennen wir Zustand $\boxed{4}$ um in $\boxed{X
                        \rightarrow aBc.De}$, wobei der Punkt $.$ markiert, welchen Teil der
                        rechten Seite wir bereits gelesen haben. Wir erhalten folgendes Bild:
                    |> figure
                        |> img
                            style width: 100%
                            src ../img/context-free/LR/hat-G-to-DK.svg
                    |> h2

                        Die $a^{m+k}b^m$-Grammatik
                    |> p

                        Wir illustrieren obige Vorgehensweise nun anhand der Grammatik
                    |> p
                        id the-grammar

                        \begin{align*} G&amp;: \\ S&amp;\rightarrow aS \\ S&amp;\rightarrow B \\ B&
                        \rightarrow aBb \\ B&amp;\rightarrow ab \end{align*}
                    |> p

                        Laut Gebrauchsanweisung aus dem letzten Teilkapitel hat die Grammatik
                        $\dk{G}$ die Terminalsymbole $\Sigma \cup N = \{a, b, S, B\}$ und die
                        Nichtterminale $\dk{N} = \{\dk{S}, \dk{B}\}$. Die Produktionen von
                        $\dk{G}$ ergeben sich wie folgt:
                    \begin{align*} \begin{array}{l|l} \textnormal{Produktion in $G$}&
                    \textnormal{Produktion in $\hat{G}$} \\ \hline % % S \rightarrow aS&
                    {\dk{S}} \rightarrow \dkt{a} \dk{S}\\&amp;{\dk{S}} \rightarrow \dkt{a}
                    \dkt{S}\\ \hline % S \rightarrow B&amp;{\dk{S}} \rightarrow \dk{B}\\&
                    {\dk{S}} \rightarrow \dkt{B}\\ \hline % B \rightarrow aBb&amp;{\dk{B}}
                    \rightarrow \dkt{a}\dk{B}\\&{\dk{B}} \rightarrow
                    \dkt{a}\dkt{B}\dkt{b}\\ \hline % B \rightarrow ab&amp;{\dk{B}} \rightarrow
                    \dkt{ab} \end{array} \end{align*}
                    |> p

                        In dieser Grammatik betrachten wir die Rechtsableitung
                    \begin{align*} S \Step{} aS \Step{} aaS \Step{} aaB \Step{} aaaBb
                    \Step{} aaaaBbb \Step{} aaaaaBbbb \end{align*}
                    |> p

                        Es gilt $\front(aaaaaBbbb) = aaaaaBb$. In $\hat{G}$ entspricht die
                        obige Rechtsableitung der Ableitung
                    \begin{align*} \hat{S} \Step{} a\hat{S} \Step{} aa\hat{S} \Step{}
                    aa\hat{B} \Step{} aaa\hat{B} \Step{} aaaaBb \end{align*}
                    |> p

                        Den nichtdeterministischen DK-Automaten (mit $\epsilon$-Übergängen)
                        können wir nun Schritt für Schritt zeichnen:
                    |> figure
                        class centered-figure well container
                        |> a
                            data-slide prev
                            href #aaabb-dk-nea
                            class left carousel-control-prev-icon
                            |> div
                                class carousel-nav-icon
                                |> img
                                    src ../img/carousel-prev-icon.svg
                        |> a
                            data-slide next
                            href #aaabb-dk-nea
                            class right carousel-control-next-icon
                            |> div
                                class carousel-nav-icon
                                |> img
                                    src ../img/carousel-next-icon.svg
                        |> div
                            style display: inline-block
                            data-interval false
                            class carousel
                            id aaabb-dk-nea
                            |> ol
                                class carousel-indicators
                                |> li
                                    class active
                                    data-slide-to 1
                                    data-target #aaabb-dk-nea
                                |> li
                                    data-slide-to 2
                                    data-target #aaabb-dk-nea
                                |> li
                                    data-slide-to 3
                                    data-target #aaabb-dk-nea
                                |> li
                                    data-slide-to 4
                                    data-target #aaabb-dk-nea
                                |> li
                                    data-slide-to 5
                                    data-target #aaabb-dk-nea
                                |> li
                                    data-slide-to 6
                                    data-target #aaabb-dk-nea
                                |> li
                                    data-slide-to 7
                                    data-target #aaabb-dk-nea
                                |> li
                                    data-slide-to 8
                                    data-target #aaabb-dk-nea
                                |> li
                                    data-slide-to 9
                                    data-target #aaabb-dk-nea
                                |> li
                                    data-slide-to 10
                                    data-target #aaabb-dk-nea
                                |> li
                                    data-slide-to 11
                                    data-target #aaabb-dk-nea
                            |> div
                                style display: inline-block
                                class carousel-inner
                                |> div
                                    class item active
                                    |> img
                                        style height: 18em
                                        src ../img/context-free/LR/dk-automaton-5-nea-aaabb/01.svg
                                |> div
                                    class item
                                    |> img
                                        style height: 18em
                                        src ../img/context-free/LR/dk-automaton-5-nea-aaabb/02.svg
                                |> div
                                    class item
                                    |> img
                                        style height: 18em
                                        src ../img/context-free/LR/dk-automaton-5-nea-aaabb/03.svg
                                |> div
                                    class item
                                    |> img
                                        style height: 18em
                                        src ../img/context-free/LR/dk-automaton-5-nea-aaabb/04.svg
                                |> div
                                    class item
                                    |> img
                                        style height: 18em
                                        src ../img/context-free/LR/dk-automaton-5-nea-aaabb/05.svg
                                |> div
                                    class item
                                    |> img
                                        style height: 18em
                                        src ../img/context-free/LR/dk-automaton-5-nea-aaabb/06.svg
                                |> div
                                    class item
                                    |> img
                                        style height: 18em
                                        src ../img/context-free/LR/dk-automaton-5-nea-aaabb/07.svg
                                |> div
                                    class item
                                    |> img
                                        style height: 18em
                                        src ../img/context-free/LR/dk-automaton-5-nea-aaabb/08.svg
                                |> div
                                    class item
                                    |> img
                                        style height: 18em
                                        src ../img/context-free/LR/dk-automaton-5-nea-aaabb/09.svg
                                |> div
                                    class item
                                    |> img
                                        style height: 18em
                                        src ../img/context-free/LR/dk-automaton-5-nea-aaabb/10.svg
                                |> div
                                    class item
                                    |> img
                                        style height: 18em
                                        src ../img/context-free/LR/dk-automaton-5-nea-aaabb/11.svg
                    |> h2

                        Der nichtdeterministische DK-Automat
                    |> div
                        class well container theorem
                        |> p
                            |> span
                                class numbered-title

                                Definition
                                |> NumberedTitle

                                    ::::ChapterCtr.::::SectionCtr.::++DefCtr
                            &ensp;Für eine kontextfreie
                            Grammatik ist der nichtdeterministische DK-Automat (NDK-Automat) ein
                            nichtdeterministischer endlicher Automat mit $\epsilon$-Übergängen,
                            den wir wie folgt konstruieren:
                        |> ol
                            |> li

                                Für jede Produktion $X \rightarrow \beta$ gibt es einen
                                Zustandsübergang $\boxed{X} \step{\epsilon} \boxed{X \step{} .
                                \beta}$
                            |> li

                                Für jede Zerlegung $\beta = \beta_1 \sigma \beta_2$ gibt es den
                                Zustandsübergang $\boxed{X \step{} \beta_1 . \sigma \beta_2}
                                \step{\sigma} \boxed{X \step{} \beta_1 \sigma . \beta_2}$
                            |> li

                                Falls $\sigma$ ein Nichtterminal $Y$ ist, also $\beta = \beta_1 Y
                                \beta_2$, gibt es zusätzlich noch den Übergang $\boxed{X \step{}
                                \beta_1 . Y \beta_2} \step{\epsilon} \boxed{Y}$
                        |> p

                            Die Interpretation dieser Übergänge in
                            Rechtsableitungsbaum-Begriffen ist: (1) heißt, dass $\boxed{X}$ ein
                            Stammknoten ist und wir ihn anhand der Regel $X \rightarrow \beta$
                            expandieren; wir erschaffen also Kinder, die mit den Symbolen von
                            $\beta$ beschriftet sind. (2) heißt, dass wir uns bereits
                            entschieden haben, die Kinder $\beta_1$ von $\boxed{X}$ nicht zu
                            expandieren, sie also zum linken Rand werden zu lassen, und diese
                            Entscheidung nun auch für das Symbol $\sigma$ treffen; (3) bedeutet,
                            dass wir uns entschließen $\sigma$ (das hier ein Nichtterminal $Y$
                            ist) weiter zu expandieren, es also nicht dem linken Rand zuordnen,
                            sondern zu einem Stammknoten werden lassen, uns aber noch nicht
                            entschlossen haben, welche Produktion $Y \rightarrow ?$ wir anwenden
                            wollen.
                        |> p

                            Der Startzustand ist $\boxed{S}$. Jeder Zustand der Form $\boxed{X
                            \step{} \beta .}$ ist ein akzeptierender Zustand.
                    |> h2

                        Den NDK-Automaten deterministisch machen
                    |> p

                        Wir wissen ja bereits, wie man einen nichtdeterministischen Automaten
                        deterministisch macht: die
                        |> a
                            href ./04-03-nfsm.html#nfsm-to-fsm

                            Potenzmengenkonstruktion aus Kapitel 4.3
                        . Hier können wir diese leider nicht direkt anwenden, da der obige
                        Automat \(\epsilon\)-Übergänge hat. Wie geht das also nun? Im
                        deterministischen Automaten ist wie bei der Potenzmengenkonstruktion
                        jeder Zustand eine _Menge_ \(R\) von Zuständen des
                        nichtdeterministischen Automaten. Wenn wir nun in eine solche Menge
                        \(R\) einen Zustand \(q\) einfügen, dann fügen wir auch alle Zustände
                        \(q'\) hinzu, zu denen es einen \(\epsilon\)-Übergang \(q
                        \step{\epsilon} q'\) gibt. Für den obigen nichtdeterministischen
                        Automaten sieht das dann so aus:
                    |> figure
                        class centered-figure well container
                        |> a
                            data-slide prev
                            href #aaabb-dk-dea
                            class left carousel-control-prev-icon
                            |> div
                                class carousel-nav-icon
                                |> img
                                    src ../img/carousel-prev-icon.svg
                        |> a
                            data-slide next
                            href #aaabb-dk-dea
                            class right carousel-control-next-icon
                            |> div
                                class carousel-nav-icon
                                |> img
                                    src ../img/carousel-next-icon.svg
                        |> div
                            style display: inline-block
                            data-interval false
                            class carousel
                            id aaabb-dk-dea
                            |> ol
                                class carousel-indicators
                                |> li
                                    class active
                                    data-slide-to 1
                                    data-target #aaabb-dk-dea
                                |> li
                                    data-slide-to 2
                                    data-target #aaabb-dk-dea
                                |> li
                                    data-slide-to 3
                                    data-target #aaabb-dk-dea
                                |> li
                                    data-slide-to 4
                                    data-target #aaabb-dk-dea
                                |> li
                                    data-slide-to 5
                                    data-target #aaabb-dk-dea
                                |> li
                                    data-slide-to 6
                                    data-target #aaabb-dk-dea
                                |> li
                                    data-slide-to 7
                                    data-target #aaabb-dk-dea
                                |> li
                                    data-slide-to 8
                                    data-target #aaabb-dk-dea
                                |> li
                                    data-slide-to 9
                                    data-target #aaabb-dk-dea
                                |> li
                                    data-slide-to 10
                                    data-target #aaabb-dk-dea
                                |> li
                                    data-slide-to 11
                                    data-target #aaabb-dk-dea
                                |> li
                                    data-slide-to 12
                                    data-target #aaabb-dk-dea
                                |> li
                                    data-slide-to 13
                                    data-target #aaabb-dk-dea
                                |> li
                                    data-slide-to 14
                                    data-target #aaabb-dk-dea
                                |> li
                                    data-slide-to 15
                                    data-target #aaabb-dk-dea
                                |> li
                                    data-slide-to 16
                                    data-target #aaabb-dk-dea
                                |> li
                                    data-slide-to 17
                                    data-target #aaabb-dk-dea
                                |> li
                                    data-slide-to 18
                                    data-target #aaabb-dk-dea
                                |> li
                                    data-slide-to 19
                                    data-target #aaabb-dk-dea
                                |> li
                                    data-slide-to 20
                                    data-target #aaabb-dk-dea
                                |> li
                                    data-slide-to 21
                                    data-target #aaabb-dk-dea
                    |> h2

                        Den DK-Automaten verwenden
                    |> div
                        class well container theorem
                        |> p
                            |> span
                                class numbered-title

                                Theroem
                            *(DK-Test).* Sei $G$ eine kontextfreie Grammatik ohne
                            nutzlose Nichtterminale und ei $M$ der DK-Automat für die Grammatik
                            $G$. Die Grammatik $G$ ist LR(0) genau dann, wenn folgende zwei
                            Bedingungen gelten:
                        |> ul
                            |> li

                                (DK.1) Ein akzeptierender Zustand von $M$ (der ja eine Menge von
                                Zuständen des NDK-Automaten ist) enthält genau einen
                                akzeptierenden NDK-Zustand, also genau ein $\boxed{X \rightarrow
                                \beta .}$
                            |> li

                                (DK.2) Wenn $q$ ein akzeptierender Zustand von $M$ ist und $q
                                \step{\sigma} q'$, dann ist $\sigma$ ein Nichtterminal.
                        |> p

                            Wenn diese beiden Bedingungen gelten, sagen wir, dass $G$ den
                            DK-Test bestanden hat. Das Theorem sagt also: $G$ ist LR(0) genau
                            dann, wenn es den DK-Test besteht.
                    |> div
                        class well container
                        |> p

                            *Beweisskizze.*Wir erinnern den Leser noch einmal an die alternative
                            Charakterisierung von LR(0)-Sprachen, nämlich :
                        |> div
                            id lemma-characterization-LR0
                            class well container subtheorem
                            |> p
                                |> a
                                    href ./05-05-c-LR-grammars.html#lemma-characterization-LR0

                                    Lemma 5.7.5, noch einmal
                                *

                                **(LR(0), äquivalente Formulierung).*Eine Grammatik $G$ ist LR(0) genau dann, wenn für alle korrekten
                                Linksreduktionsschritte $\alpha \beta w \rstep{} \alpha Xw$ und
                                $\alpha' \beta' w' \rstep{} \alpha' X'w'$ gilt:
                            |> ol
                                |> li

                                    Falls $\alpha \beta = \alpha' \beta'$ dann auch $\beta = \beta'$
                                    und $X= X'$; in Worten: wenn die Fronten identisch sind, dann
                                    auch die Reduktionsschritte.
                                |> li

                                    Wenn $\alpha' \beta' = \alpha \beta \varphi$ und $|\varphi| \geq
                                    1$, dann $\varphi \not \in \Sigma^*$; in Worten: wenn
                                    $\front(\gamma)$ ein echter Präfix von $\front(\gamma')$ ist,
                                    dann muss in dem überstehenden Teil von $\front(\gamma)$
                                    mindestens ein Nichtterminal vorkommen.
                        |> p

                            Es ist nicht schwer zu sehen, dass (DK.1) äquivalent zu Punkt 1 des
                            Lemmas ist. Wenden wir uns (DK.2) und Punkt 2 zu. Wenn Punkt 2_nicht_ gilt, dann gibt es korrekte Reduktionsschritte
                        \begin{align*} \alpha \beta w \rstep{} \alpha X w \\ \alpha \beta
                        \sigma w' = \alpha' \beta' w' \rstep{} \alpha' X' w' \end{align*}
                        |> p

                            Wenn wir dem Automaten den Präfix $\alpha \beta$ füttern, bringt er
                            uns in einen Zustand, der die $\boxed{X \rightarrow \beta.}$
                            enthält, da $\alpha \beta$ ja eine Front ist. Dieser Zustand muss
                            allerdings einen Übergang haben, der mit $\sigma$ gelabelt ist, dem
                            ersten Zeichen von $\varphi$, da ja $\alpha \beta \sigma$ ein Präfix
                            der Front $\alpha' \beta'$ ist. Somit gilt (DK.2) nicht.
                        |> p

                            Wenn umgekehrt (DK.2) nicht gilt, dann gibt es einen akzeptierenden
                            Zustand $q$ (der also $\boxed{X\rightarrow \beta.}$ enthält) und
                            eine ausgehende Kante $q \step{\sigma} q'$ mit einem Terminal
                            $\sigma$.
                        |> div
                            class well well-lg numbered-exercise container-fluid
                            |> p
                                |> span
                                    class numbered-title

                                    Übungsaufgabe
                                    |> NumberedTitle

                                        ::::ChapterCtr.::::SectionCtr.::++ExoCtr
                                Zeigen Sie: wenn $G$ keine nutzlosen Nichtterminale hat, dann gibt
                                es im NDK-Automaten für jeden Zustand $q$ eine Übergangsfolge $q
                                \steps{v} q'$ zu einem akzeptierenden Zustand $q'$, wobei $v$
                                ausschließlich aus $G$-Terminalen besteht, also $v \in \Sigma^*$.
                            |> p

                                Zeigen Sie das selbe für den DK-Automaten.
                        |> p

                            Es gibt also einen Weg $q \step{\sigma} q' \steps{v} q''$ für $v \in
                            \Sigma^*$ und einen akzeptierenden Zustand $q''$. Es sind also
                            sowohl $\alpha \beta$ als auch $\alpha \beta \sigma v$ Fronten von
                            $G$, und $\sigma v$ besteht nur aus Terminalen. Das heißt, dass
                            Punkt 2 der Schlussfolgerung nicht gilt.
                            |> span
                                class qed

                                \(\square\)
                    |> h3

                        LR(1)-Grammatiken
                    Hier ist der nichtdeterministische Automat für \(G\) mit Lookahead 1.
                    |> figure
                        |> img
                            style height: 30em
                            src ../img/context-free/LR/dk-automaton-7-nea-aaabb-LR1/Nea-LR-1-for-aaabb.svg
                            loading lazy
                    Jetzt machen wir den Automaten deterministisch: